<UserControl x:Class="AcManager.Pages.ServerPreset.ServerPresetAdvanced" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:AcManager.Pages.ServerPreset"
    xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:t="http://acstuff.ru/app/tools" xmlns:c="http://acstuff.ru/app/controls"
    xmlns:g="clr-namespace:AcManager" mc:Ignorable="d" d:DataContext="{d:DesignInstance local:SelectedPage+ViewModel}" Background="Transparent">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/Converters.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/SettingsSpecific.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>

  <ScrollViewer>
    <StackPanel Style="{StaticResource SettingsCompactPanel}">

      <mui:SpacingUniformGrid HorizontalSpacing="20" Columns="2" VerticalStackMode="True" Margin="0 0 0 8">
        <StackPanel>
          <TextBlock Text="Allowed tyres:" Style="{StaticResource SettingsPanel.Heading2.First}" />
          <TextBlock Margin="20 0 0 0" Text="No tyres found" FontStyle="Italic"
              Visibility="{Binding SelectedObject.Tyres.Count, Converter={StaticResource MoreToVisibilityConverter}, ConverterParameter='0,inverse'}" />
          <ListBox x:Name="AllowedTyres" DataContext="{Binding SelectedObject}" ItemsSource="{Binding Tyres}" mui:ListBoxHelper.ProperMultiSelectionMode="True"
              ItemContainerStyle="{StaticResource CheckBoxListBoxItem}" DataContextChanged="AllowedTyres_OnDataContextChanged" Margin="20 0 0 0">
            <ListBox.ItemTemplate>
              <DataTemplate DataType="{x:Type t:ServerPresetObject+TyresItem}">
                <DockPanel Margin="0 0 4 2">
                  <TextBlock Text="{Binding CarsList}" Style="{StaticResource Small}" DockPanel.Dock="Bottom" Margin="0 2 0 0" />
                  <TextBlock Text="{Binding ShortName, StringFormat='{}[{0}]'}" Style="{StaticResource Small}" FontWeight="Bold"
                      FontFamily="{StaticResource MonospaceFont}" Margin="0 3 4 -3" />
                  <TextBlock Text="{Binding DisplayName}" />
                </DockPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </StackPanel>
        <StackPanel>
          <TextBlock Text="Fixed setups:" Style="{StaticResource SettingsPanel.Heading2.First}" />
          <TextBlock Margin="20 0 0 0" Text="No fixed setups set" FontStyle="Italic"
              Visibility="{Binding SelectedObject.SetupItems.Count, Converter={StaticResource MoreToVisibilityConverter}, ConverterParameter='0,inverse'}" />
          <ItemsControl x:Name="SetupItems" DataContext="{Binding SelectedObject}" ItemsSource="{Binding SetupItems}" mui:Draggable.Enabled="True"
              mui:ListBoxHelper.ProperMultiSelectionMode="True" Margin="20 0 0 8" Style="{StaticResource VirtualizingItemsControl}"
              mui:Draggable.DestinationConverter="{Binding SetupsDraggableConverterInstance}">
            <ItemsControl.ItemTemplate>
              <DataTemplate DataType="{x:Type t:ServerPresetObject+SetupItem}">
                <!--<TextBlock Text="{Binding DisplayName}" Margin="2 -4 0 4" />-->
                <Border Background="Transparent" ToolTip="{Binding Filename}">
                  <Border.ContextMenu>
                    <ContextMenu>
                      <MenuItem Header="View in folder" Command="{Binding ViewInDirectoryCommand}" />
                      <MenuItem Header="Use as default" IsCheckable="True" IsChecked="{Binding IsDefault}" />
                      <Separator />
                      <MenuItem Header="Test setup" Click="OnTestSetupClick" />
                      <Separator />
                      <MenuItem Header="Delete setup" Command="{Binding DeleteCommand}" />
                    </ContextMenu>
                  </Border.ContextMenu>
                  <DockPanel Margin="0 0 4 2">
                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsDefault}" Margin="0 0 8 0" />
                    <Button Margin="0 -2 0 0" Style="{StaticResource DeleteButton}" Command="{Binding DeleteCommand}"
                        Visibility="{Binding DeleteCommand.IsAbleToExecute, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <TextBlock Text="{Binding DisplayName}" DockPanel.Dock="Top" Margin="0 0 0 2" />
                    <Path Data="{StaticResource AlertIconData}" Width="10" Height="10" DockPanel.Dock="Left" Fill="{DynamicResource Error}" Stretch="Uniform"
                        Margin="0 0 4 0" VerticalAlignment="Center" ToolTip="This isn’t a car selected for this server"
                        Visibility="{Binding IsValidCar, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}" />
                    <TextBlock Text="{Binding CarDisplayName}" Style="{StaticResource Small}" />
                  </DockPanel>
                </Border>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
          <Button Command="{Binding AddSetupCommand}" Margin="0 0 0 8">
            <DockPanel IsHitTestVisible="False" Margin="0">
              <Path Data="{StaticResource AddIconData}" Width="10" Height="10"
                  Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Stretch="Uniform" DockPanel.Dock="Left"
                  Margin="0 0 4 0" VerticalAlignment="Center" SnapsToDevicePixels="True" />
              <TextBlock Text="Add setup" />
            </DockPanel>
          </Button>
          <c:MessageBlock CloseKey="servercheckedsetupinfo">
            <TextBlock Text="Checked setup is the one applied by default." />
          </c:MessageBlock>
        </StackPanel>
      </mui:SpacingUniformGrid>

      <TextBlock Text="Server plugin:" Style="{StaticResource SettingsPanel.Heading2}" />
      <DockPanel>
        <Label Content="Address:" />
        <mui:BetterTextBox Text="{Binding SelectedObject.PluginUdpAddress}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>
      <DockPanel>
        <Label Content="Local port:" />
        <mui:BetterTextBox Text="{Binding SelectedObject.PluginUdpPort}" Placeholder="{x:Static t:ToolsStrings.Common_None}" Mode="Integer" Minimum="1"
            Maximum="65535" />
      </DockPanel>
      <DockPanel Visibility="{Binding SelectedObject.UseCmPlugin, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
        <Label Content="Auth:" />
        <mui:BetterTextBox Text="{Binding SelectedObject.PluginAuthAddress}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>

      <TextBlock Text="CM plugin:" Style="{StaticResource SettingsPanel.Heading2}" />
      <CheckBox IsChecked="{Binding SelectedObject.UseCmPlugin}">
        <CheckBox.ToolTip>
          <TextBlock MaxWidth="400" TextWrapping="Wrap"
              Text="Using CM as server plugin allows to track server state, use real weather conditions and connect several other plugins at once. With this option active server plugin
              parameters become parameters for CM plugin. To connect extra plugins, add new address and port combinations in CM plugin settings." />
        </CheckBox.ToolTip>
        <Label Content="Use Content Manager as server plugin" />
      </CheckBox>
      <CheckBox IsChecked="{Binding SelectedObject.RealConditions}"
          Visibility="{Binding SelectedObject.UseCmPlugin, Converter={StaticResource BooleanToVisibilityConverter}}">
        <CheckBox.ToolTip>
          <TextBlock MaxWidth="400" TextWrapping="Wrap"
              Text="Works with CSP. Make server into CSP-only server with 1643 as minimum required version and not only weather type, but also physics conditions will be synced as well." />
        </CheckBox.ToolTip>
        <Label Content="{x:Static g:AppStrings.Drive_RealConditions}" />
      </CheckBox>
      <DockPanel Visibility="{Binding SelectedObject.UseCmPlugin, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Label Content="Extra plugins:" />
        <Button DockPanel.Dock="Right" Margin="8 0 0 0" Content="Add new plugin" Command="{Binding SelectedObject.AddPluginEntryCommand}" />
        <mui:Switch Value="{Binding SelectedObject.PluginEntries.Count}">
          <mui:PlaceholderTextBlock mui:Switch.When="0" Placeholder="None" />
          <ItemsControl ItemsSource="{Binding SelectedObject.PluginEntries}" Style="{StaticResource VirtualizingItemsControl}" MaxHeight="200">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <Grid Margin="0 0 0 8">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <mui:BetterTextBox Text="{Binding Address}" Placeholder="Address" />
                  <mui:BetterTextBox Grid.Column="1" Text="{Binding UdpPort}" Placeholder="Local port" Mode="Integer" Minimum="1" Maximum="65535"
                      Margin="4 0 0 0" />
                  <Button Grid.Column="2" Content="Remove plugin entry" Command="{Binding DeleteCommand}" Margin="4 0 0 0" VerticalAlignment="Top" />
                </Grid>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </mui:Switch>
      </DockPanel>

      <TextBlock Text="Web link:" Style="{StaticResource SettingsPanel.Heading2}" />
      <DockPanel>
        <mui:BetterTextBox Text="{Binding SelectedObject.WebLink}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>

      <TextBlock Text="FTP data:" Style="{StaticResource SettingsPanel.Heading2}" />
      <c:MessageBlock Margin="0 0 0 8">
        <mui:BbCodeBlock
            Text="This section doesn’t affect actual AC server, it only allows you to quickly upload all necessary files (including executable) to a remote server via FTP." />
      </c:MessageBlock>
      <DockPanel>
        <Label Content="Host:" />
        <mui:BetterTextBox Text="{Binding SelectedObject.FtpHost}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>
      <DockPanel>
        <Label Content="Login:" />
        <mui:BetterTextBox Text="{Binding SelectedObject.FtpLogin}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>
      <DockPanel>
        <Label Content="Password:" />
        <mui:AsyncButton Content="Verify connection" Command="{Binding SelectedObject.FtpVerifyConnectionCommand}" />
        <mui:ProperPasswordBox Password="{Binding SelectedObject.FtpPassword}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>
      <DockPanel>
        <Label Content="Folder:" />
        <mui:BetterTextBox Text="{Binding SelectedObject.FtpDirectory}" Placeholder="{x:Static t:ToolsStrings.Common_None}" />
      </DockPanel>
      <CheckBox IsChecked="{Binding SelectedObject.FtpUploadDataOnly}">
        <Label Content="Upload data only, without executable" />
      </CheckBox>
      <DockPanel IsEnabled="{Binding SelectedObject.FtpUploadDataOnly, Converter={StaticResource InvertBooleanConverter}}">
        <Label Content="Target:" />
        <mui:BetterComboBox IsEditable="False" ItemsSource="{Binding Modes}" SelectedItem="{Binding SelectedObject.FtpMode}">
          <mui:BetterComboBox.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}" />
            </DataTemplate>
          </mui:BetterComboBox.ItemTemplate>
        </mui:BetterComboBox>
      </DockPanel>
      <CheckBox IsChecked="{Binding SelectedObject.FtpClearBeforeUpload}">
        <Label Content="Clear folder before upload" TextBlock.Foreground="{DynamicResource Error}" />
      </CheckBox>
      <mui:AsyncButton Content="Upload content" Command="{Binding SelectedObject.FtpUploadContentCommand}" />

    </StackPanel>
  </ScrollViewer>
</UserControl>